
#include<stdio.h>

#include<stdlib.h>

#define maxsize 1024

typedef int datatype;

typedef struct

{

    datatype elements[maxsize];

    int Top;

}Stack;

void setNull(Stack *S)

{

    S->Top=-1;

}

int isfull(Stack *S)

{

    if(S->Top>=maxsize-1)

        return 1;

    return 0;

}

int isempty(Stack *S)

{

    if(S->Top>=0)

        return 0;

    return 1;

}

void push(Stack *S,datatype E)

{

    if(S->Top>=maxsize-1)

        printf("Stack Overflow");

    else

    {

        S->Top++;

        S->elements[S->Top]=E;

    }

}

datatype *pop(Stack *S)

{

    datatype *temp;

    if(isempty(S))

    {

        printf("Stack underflow");

        return NULL;

    }

    else

    {

        S->Top--;

        temp=(datatype*)malloc(sizeof(datatype));

        *temp=S->elements[S->Top+1];

        return temp;

    }

}

void Conversion()       //任意进制转换

{

    int n,r1,r2,temp,m,dec,p;

    char c;

    Stack S;

    setNull(&S);

    printf("请输入转换前的进制\n");

    scanf("%d",&r1);

    printf("请输入需要转换的数\n");

    getchar();

    while((c=getchar())!='\n')

    {

        if(c>='0'&&c<='9')

            push(&S,c-'0');

        else

            push(&S,c-'A'+10);

    }       //将r1进制数每一位转换为对应数字，并从高位到低位压进栈

    printf("请输入转换后的进制\n");

    scanf("%d",&r2);

    dec=0;

    p=1;

    while(!isempty(&S))

    {

        temp=*pop(&S);

        dec+=temp*p;

        p*=r1;

    }       //模拟手算，将r1进制转换为十进制

    n=dec;

    while(n)

    {

        m=n%r2;

        if(isfull(&S))

            printf("Over flow\n");

        else

            push(&S,m);

        n/=r2;

    }       //模拟手算，将十进制转换为r2进制

    printf("转换后的数为\n");

    while(!isempty(&S))

    {

        temp=*pop(&S);

        if(temp<10)

            printf("%d",temp);

        else

            printf("%c",'A'+temp-10);

    }

    printf("\n");

}

int main()

{

    Conversion();

}

